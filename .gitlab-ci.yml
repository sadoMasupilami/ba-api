stages:
  - test
  - build
  - package branch
  - package release
  - deploy test
  - deploy staging
  - deploy production

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  paths:
    - .m2/repository

test:
  stage: test
  image: maven:3.6.3-jdk-11
  script:
    - mvn $MAVEN_CLI_OPTS test
  except:
    - flux-sync

build:
  stage: build
  image: maven:3-jdk-11
  script:
    - mvn $MAVEN_CLI_OPTS package
  artifacts:
    paths:
      - target/*.jar
  only:
    - /^(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
    - triggers
    - flux-sync

#package branch:
#  stage: package branch
#  image:
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: [""]
#  script:
#    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
#  only:
#    - pushes
#  except:
#    - tags

package release:
  stage: package release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - /^(\d+\.)?(\d+\.)?(\*|\d+)$/
  except:
    - branches
    - triggers
    - flux-sync

#deploy test:
#  stage: deploy test
#  except:
#    - tags
#  environment:
#    name: test
#    url: http://test1-$CI_COMMIT_REF_NAME.cloud.mklug.at
#  image: alpine
#  script:
#    - echo 'test deploy'
#
#deploy staging:
#  only:
#    - tags
#  except:
#    - branches
#  stage: deploy staging
#  environment:
#    name: staging
#    url: http://test1.cloud.mklug.at
#  image: alpine
#  script:
#    - echo 'staging deploy'
#
#deploy production:
#  only:
#    - tags
#  except:
#    - branches
#  when: manual
#  stage: deploy production
#  environment:
#    name: production
#    url: http://test1.cloud.mklug.at
#  image: alpine
#  script:
#    - echo 'production deploy'
