stages:
  - test
  - package branch
  - package release
  - deploy test
  - deploy staging
  - deploy production

test:
  stage: test
  image: python:3
  script:
    - cd $CI_PROJECT_DIR
    - pwd
    - ls -la
    - echo 'hallo'
    - pip install --no-cache-dir -r requirements.txt
    - python -m pytest

package branch:
  stage: package branch
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - pushes
  except:
    - tags

package release:
  stage: package release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

deploy test:
  stage: deploy test
  except:
    - tags
  environment:
    name: test
    url: http://test1-$CI_COMMIT_REF_NAME.cloud.mklug.at
  image: alpine
  script:
    - echo 'test deploy'

deploy staging:
  only:
    - tags
  except:
    - branches
  stage: deploy staging
  environment:
    name: staging
    url: http://test1.cloud.mklug.at
  image: alpine
  script:
    - echo 'staging deploy'

deploy production:
  only:
    - tags
  except:
    - branches
  when: manual
  stage: deploy production
  environment:
    name: production
    url: http://test1.cloud.mklug.at
  image: alpine
  script:
    - echo 'production deploy'
