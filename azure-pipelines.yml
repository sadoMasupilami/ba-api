variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true'
  imageName: sadomasupilami/ba-api-azure

trigger:
  branches:
    include:
    - master
    - refs/tags/*

pool:
  vmImage: 'ubuntu-latest'

steps:

- script: VERSION_TAG=`git describe --tags` && echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"
  displayName: Set the tag name as an environment variable
  condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')

- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    goals: 'test'
  displayName: mvn test

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    goals: 'package'
  displayName: mvn package

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: 'target/gs-rest-service-0.1.0.jar'
    artifactName: jar
  displayName: publish jar file

- task: Docker@2
  displayName: Build docker image
  condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
  inputs:
    repository: $(imageName)
    command: build
    Dockerfile: Dockerfile
    tags: |
      $(VERSION_TAG)

- task: Docker@2
  displayName: Push docker image
  condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
  inputs:
    containerRegistry: dockerHub
    repository: $(imageName)
    command: push
    tags: |
      $(VERSION_TAG)